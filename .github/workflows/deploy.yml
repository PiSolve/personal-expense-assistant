name: Build and Deploy Flutter Web to GitHub Pages

on:
  push:
    branches: [ main ]

# Allow GITHUB_TOKEN to deploy to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.6'
        
    - name: Create .env file with secrets
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID }}" >> .env
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Flutter Web
      run: flutter build web --release --base-href "/personal-expense-assistant/"
      
    - name: Debug - List build output
      run: |
        echo "Listing build/web contents:"
        ls -la build/web/
        echo "Checking for index.html:"
        if [ -f build/web/index.html ]; then
          echo "index.html exists"
          head -20 build/web/index.html
        else
          echo "index.html NOT found"
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build/web'
        
    - name: Debug artifact upload
      run: |
        echo "Artifact should be uploaded from: ./build/web"
        echo "Checking if upload was successful..."
        ls -la ./build/web/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Debug deployment result
        run: |
          echo "Deployment URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Deployment status: ${{ steps.deployment.outcome }}" 